#!/usr/bin/env php
<?php namespace Heroes\Convert;
/*
 * heroes-convert
 *
 * Convert HeroesDataParser to heroes-talents, for Heroes of the Storm
 * https://github.com/tattersoftware/heroes-convert
 * 
 */
ini_set('error_reporting', E_ALL);
;
ini_set('display_errors', '1');
ini_set('display_startup_errors', '1');

// Verify proper usage
$script = $argv[0];

if (empty($argv[1]) || empty($argv[2]))
{
	echo 'Usage: ./heroes-convert herodata_localized.json gamestrings_enus.json [outputDirectory]' . PHP_EOL;
	return;
}

// Load the classes
require 'Connect.php';
require 'Filter.php';
require 'Intervene.php';
require 'Locale.php';
require 'Output.php';
require 'Parse.php';

// Parse hero data
$parse  = new Parse($argv[1]);
$heroes = $parse->run()->getHeroes();
unset($parse);

// Apply filters to remove unwanted data
$filter = new Filter($heroes);
$heroes = $filter->run()->getHeroes();
unset($filter);

// Link talents to their abilities
$connect = new Connect($heroes);
$heroes  = $connect->run()->getHeroes();
unset($connect);

// Add localized game strings
$locale = new Locale($heroes, $argv[2]);
$heroes = $locale->run()->getHeroes();
unset($locale);

// Implement any manual interventions
$intervene = new Intervene($heroes);
$heroes    = $intervene->run()->getHeroes();
unset($intervene);

// Write out the files
$output = new Output($heroes);
unset($heroes);

if (! empty($argv[3]))
{
	$output->setDirectory($argv[3]);
}

$output->run();
